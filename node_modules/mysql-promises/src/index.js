
const mysql = require('mysql'); 
class MySQL {


    constructor({host, user, password, database} = {}) {
        this.user =  user || process.env.MYSQL_USER
        this.password = password || process.env.MYSQL_PASSWORD
        this.host = host || process.env.MYSQL_HOST
        this.db = database || process.env.MYSQL_DATABASE
        if(!this.user){
            throw new Error('Please define a user');
        }
        if(!this.password){
            throw new Error('Please define a password')
        }
        if(!this.host){
            throw new Error('Please define a host')
        }
        if(!this.db){
            throw new Error('Please define a database')
        }
         this.con = mysql.createConnection({
            host: this.host,
            user: this.user,
            password: this.password,
            database: this.db
          });
          this.con.connect(function(err) {
            if (err) throw err;
            console.log("Successfully Connected to the Database!");
          });
        }
          async findOne(query){
              if(!query){
                  throw new Error('Please define your query!')
              }
              return new Promise(function(resolve, reject) {
                this.con.query(query, (err, result) => {
                  if (err) {
                    reject(err);
                  }
                  resolve(result[0]);
                });
              });
          }
          async find(query){
            if(!query){
                throw new Error('Please define your query!')
            }
            return new Promise(function(resolve, reject) {
              this.con.query(query, (err, result) => {
                if (err) {
                  reject(err);
                }
                resolve(result);
              });
            });
          }
          async query(q){
            if(!q){
                throw new Error('Please define your query!')
            }
            return new Promise(function(resolve, reject) {
              this.con.query(q, (err, result) => {
                if (err) {
                  reject(err);
                }
                resolve(result);
              });
            }); 
          }
        }
module.exports = MySQL;